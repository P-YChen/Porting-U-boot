nand_chip 
{
	void __iomem *IO_ADDR_R;
	void __iomem *IO_ADDR_W;

	uint8_t (*read_byte)(struct mtd_info *mtd);
	u16     (*read_word)(struct mtd_info *mtd);
	void    (*write_buf)(struct mtd_info *mtd, const uint8_t *buf, int len);
	void    (*read_buf)(struct mtd_info *mtd, uint8_t *buf, int len);
	int     (*verify_buf)(struct mtd_info *mtd, const uint8_t *buf, int len);
	void    (*select_chip)(struct mtd_info *mtd, int chip);
	int     (*block_bad)(struct mtd_info *mtd, loff_t ofs, int getchip);
	int     (*block_markbad)(struct mtd_info *mtd, loff_t ofs);
	void    (*cmd_ctrl)(struct mtd_info *mtd, int dat, unsigned int ctrl);
	int     (*dev_ready)(struct mtd_info *mtd);
	void    (*cmdfunc)(struct mtd_info *mtd, unsigned command, int column, int page_addr);
	int	(*waitfunc)(struct mtd_info *mtd, struct nand_chip *this);
	void	(*erase_cmd)(struct mtd_info *mtd, int page);
	int	(*scan_bbt)(struct mtd_info *mtd);
	int	(*errstat)(struct mtd_info *mtd, struct nand_chip *this, int state, int status, int page);
	int	(*write_page)(struct mtd_info *mtd, struct nand_chip *chip, const uint8_t *buf, int page, int cached, int raw);

	int		chip_delay;
	unsigned int	options;

	int		page_shift;
	int		phys_erase_shift;
	int		bbt_erase_shift;
	int		chip_shift;
	int		numchips;
	unsigned long	chipsize;
	int		pagemask;
	int		pagebuf;
	int		subpagesize;
	uint8_t		cellinfo;
	int		badblockpos;

	int 		state;

	uint8_t		*oob_poi;
	struct nand_hw_control  *controller;
	struct nand_ecclayout	*ecclayout;

	struct nand_ecc_ctrl ecc;
	struct nand_buffers *buffers;

	struct nand_hw_control hwcontrol;

	struct mtd_oob_ops ops;

	uint8_t		*bbt;
	struct nand_bbt_descr	*bbt_td;
	struct nand_bbt_descr	*bbt_md;

	struct nand_bbt_descr	*badblock_pattern;

	void		*priv;
};

